<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Windows.Forms" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Resources" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.ComponentModel.Design" #>
<#@ import namespace="System.Text.RegularExpressions" #>
namespace ResourcesMapping
{
<#
	var globalResxFolder = this.Host.ResolvePath(".");
	var resxFiles = Directory.GetFiles(globalResxFolder, "*.resx");

	foreach(var filePath in resxFiles)
	{
		var fileNameParts = Path.GetFileName(filePath).Split('.');
		if (fileNameParts.Length > 2) continue; // skip other cultures than default
		var fileName = fileNameParts[0];
#>
	public enum <#=fileName#>
	{
<#
		using (var reader = new ResXResourceReader(filePath))
		{
			reader.UseResXDataNodes = true;

			foreach(DictionaryEntry entry in reader)
			{
				var name = entry.Key;
				var node = (ResXDataNode)entry.Value;
				var value = node.GetValue((ITypeResolutionService) null).ToString();
				value = Regex.Split(value, "\r\n|\r|\n").FirstOrDefault() ?? "";
				var comment = Regex.Split(node.Comment, "\r\n|\r|\n").FirstOrDefault() ?? "";
				var summary = value;
				if (!String.IsNullOrEmpty(comment)) summary += " - " + comment;

#>
        /// <summary>
        /// <#= summary #>
        /// </summary>
        <#= name #>,

<#
			} // end foreach
		} // end using
#>
	}

<#
	}
	#>
}
