// <auto-generated />
using System;
using DziennikSportowca.Infrastructure.EntityFramework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DziennikSportowca.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tDictionary", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("tDictionaries","schDictionaries");
                });

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tDictionaryItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("DictionaryId");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.ToTable("tDictionaryItems","schDictionaries");
                });

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tDictionaryItemName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Culture");

                    b.Property<int>("DictionaryItemId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryItemId");

                    b.ToTable("tDictionaryItemName","schDictionaries");
                });

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityTypeId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.ToTable("tExercise","schExercise");
                });

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("tUser","schSecurity");
                });

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tDictionaryItem", b =>
                {
                    b.HasOne("DziennikSportowca.EntityFramework.Data.Models.tDictionary", "Dictionary")
                        .WithMany("DictionaryItems")
                        .HasForeignKey("DictionaryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tDictionaryItemName", b =>
                {
                    b.HasOne("DziennikSportowca.EntityFramework.Data.Models.tDictionaryItem", "DictionaryItem")
                        .WithMany("Names")
                        .HasForeignKey("DictionaryItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DziennikSportowca.EntityFramework.Data.Models.tExercise", b =>
                {
                    b.HasOne("DziennikSportowca.EntityFramework.Data.Models.tDictionaryItem", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
